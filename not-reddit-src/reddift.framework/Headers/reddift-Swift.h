// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class Session;
@class NSHTTPURLResponse;
@class NSError;
@class NSURLSession;
@class NSURLSessionDownloadTask;

/**
  Session class to communicate with reddit.com using OAuth.
*/
SWIFT_CLASS("_TtC7reddift15BackgroundFetch")
@interface BackgroundFetch : NSObject <NSURLSessionDelegate>
- (nonnull instancetype)initWithCurrent:(Session * _Nonnull)currentSession request:(NSURLRequest * _Nonnull)aRequest taskHandler:(void (^ _Nonnull)(NSHTTPURLResponse * _Nullable, NSURL * _Nullable, NSError * _Nullable))aTaskHandler OBJC_DESIGNATED_INITIALIZER;
- (void)resume;
- (void)urlSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingTo:(NSURL * _Nonnull)location;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface NSBundle (SWIFT_EXTENSION(reddift))
@end

@class UIFont;
@class UIColor;

@interface NSAttributedString (SWIFT_EXTENSION(reddift))
/**
  Returns list of URLs that were included in NSAttributedString as NSLinkAttributeName’s array.
*/
@property (nonatomic, readonly, copy) NSArray<NSURL *> * _Nonnull includedURL;
/**
  Returns list of image URLs(like gif, jpg, png) that were included in NSAttributedString as NSLinkAttributeName’s array.
*/
@property (nonatomic, readonly, copy) NSArray<NSURL *> * _Nonnull includedImageURL;
/**
  Reconstructs attributed string for rendering using UZTextView or UITextView.
  \param normalFont Specified UIFont you want to use when the object is rendered.

  \param color Specified UIColor of strings.

  \param linkColor Specified UIColor of strings have NSLinkAttributeName as an attribute.

  \param codeBackgroundColor Specified UIColor of background of strings that are included in <code>.


  returns:
  NSAttributedString object to render using UZTextView or UITextView.
*/
- (NSAttributedString * _Nonnull)reconstructWith:(UIFont * _Nonnull)normalFont color:(UIColor * _Nonnull)color linkColor:(UIColor * _Nonnull)linkColor codeBackgroundColor:(UIColor * _Nonnull)codeBackgroundColor;
@end


@interface NSParagraphStyle (SWIFT_EXTENSION(reddift))
@end


/**
  Session class to communicate with reddit.com using OAuth.
*/
SWIFT_CLASS("_TtC7reddift7Session")
@interface Session : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate, NSURLSessionTaskDelegate>
/**
  Initialize anonymouse session object
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
/**
  Set an expired token to self.
  This method is implemented in order to test codes to automatiaclly refresh an expired token.
*/
- (void)setDummyExpiredToken;
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
- (NSURLRequest * _Nullable)requestForGettingProfileAndReturnError:(NSError * _Nullable * _Nullable)error;
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface Session (SWIFT_EXTENSION(reddift))
@end


@interface UIColor (SWIFT_EXTENSION(reddift))
+ (UIColor * _Nonnull)colorWith:(NSString * _Nonnull)hexString;
- (NSString * _Nonnull)hexString:(BOOL)includeAlpha;
@end

#pragma clang diagnostic pop
